apply plugin: 'com.android.application'

def withAutotrack = true

if (withAutotrack) {
    apply plugin: 'com.growingio.android.autotracker'
}

buildscript {
    repositories {
        google()
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath "com.growingio.android:autotracker-gradle-plugin:${releaseConfiguration.releaseVersion}"
    }
}

android {
    compileSdkVersion buildConfiguration.compileVersion

    defaultConfig {
        "android.support.test.runner.AndroidJUnitRunner"
        applicationId "com.gio.test.three"
        minSdkVersion buildConfiguration.minSdkVersion
        targetSdkVersion buildConfiguration.targetSdkVersion

        buildConfigField "boolean", "withAutotrack", "$withAutotrack"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
        multiDexEnabled false

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "9c136e417eea46bbb2e94b4a", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']
        assets.srcDirs = ['assets']
    }

    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                jvmArgs '-noverify'
            }
        }

        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

growingAutotracker {
    development true
//    logEnabled true
//    excludePackages ['com.android', 'com.android2']
}

dependencies {
    implementation project(':growingio-tracker')
    implementation project(':demo-core')
    if (withAutotrack) {
        implementation project(":demo-autotrack")
    }

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    testImplementation "org.mockito:mockito-core:$mockitoCore"
    testImplementation "org.powermock:powermock-api-mockito2:$powermockApiMockito2"
    testImplementation "org.powermock:powermock-module-junit4:$powermockModuleJunit4"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermockModuleJunit4"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermockModuleJunit4"
    testImplementation "com.google.truth:truth:$truth"

    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "androidx.test:runner:$xTest"
    testImplementation "androidx.test:core:$xTest"
    testImplementation "androidx.test.ext:junit:$xTestExt"
}
